{"version":3,"file":"uml-editor-change-handler.min.js","sources":["../src/uml-editor-change-handler.js"],"sourcesContent":["// This file is part of Moodle - https://moodle.org\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <https://www.gnu.org/licenses/>.\n\nconst eventBuffer = [];\nlet bufferTimeout = null;\n\n/**\n * Get the target input field.\n *\n * @param {string} inputId\n * @returns {HTMLElement|null}\n */\nfunction getTargetInput(inputId) {\n    const targetElem = document.querySelector(`#${inputId}`);\n    if (!targetElem) {\n        return null;\n    }\n\n    if (targetElem.disabled) {\n        return null;\n    }\n\n    return targetElem;\n}\n\nexport const diagramChangeEventName = 'diagramChanged';\n\n/**\n * Set the diagram data to the reference input field.\n *\n * @param {Event} event\n */\nexport function setDiagramToReferenceInputField(event) {\n    event.target.value = event.detail.diagram;\n}\n\n/**\n * Emit a diagram data changed event.\n *\n * @param {string} inputId\n * @param {string} diagram\n */\nexport function emitDiagramDataChangedEvent(inputId, diagram) {\n    const targetElem = getTargetInput(inputId);\n    if (!targetElem) {\n        return;\n    }\n\n    const event = new CustomEvent(diagramChangeEventName, {\n        bubbles: true,\n        detail: {\n            diagram,\n        }\n    });\n\n    // Add the event to the buffer\n    eventBuffer.push(event);\n\n    // If there's a buffer timeout already set, clear it\n    if (bufferTimeout) {\n        clearTimeout(bufferTimeout);\n    }\n\n    // Set a new buffer timeout to emit the events after 500ms\n    bufferTimeout = setTimeout(() => {\n        targetElem.dispatchEvent(eventBuffer[eventBuffer.length - 1]);\n\n        // Clear the buffer and the buffer timeout\n        eventBuffer.splice(0, eventBuffer.length);\n        bufferTimeout = null;\n    }, 100);\n}\n"],"names":["inputId","diagram","targetElem","document","querySelector","disabled","getTargetInput","event","CustomEvent","diagramChangeEventName","bubbles","detail","eventBuffer","push","bufferTimeout","clearTimeout","setTimeout","dispatchEvent","length","splice","target","value","_exports"],"mappings":"iNAsDO,SAAqCA,QAASC,SACjD,MAAMC,WA/BV,SAAwBF,SACpB,MAAME,WAAaC,SAASC,cAAe,IAAGJ,WAC9C,IAAKE,WACD,OAAO,KAGX,GAAIA,WAAWG,SACX,OAAO,KAGX,OAAOH,UACX,CAoBuBI,CAAeN,SAClC,IAAKE,WACD,OAGJ,MAAMK,MAAQ,IAAIC,YAAYC,uBAAwB,CAClDC,SAAS,EACTC,OAAQ,CACJV,mBAKRW,YAAYC,KAAKN,OAGbO,eACAC,aAAaD,eAIjBA,cAAgBE,YAAW,KACvBd,WAAWe,cAAcL,YAAYA,YAAYM,OAAS,IAG1DN,YAAYO,OAAO,EAAGP,YAAYM,QAClCJ,cAAgB,IAAI,GACrB,IACP,2CAvCO,SAAyCP,OAC5CA,MAAMa,OAAOC,MAAQd,MAAMI,OAAOV,OACtC,EA/BA,MAAMW,YAAc,GACpB,IAAIE,cAAgB,KAqBb,MAAML,uBAAsBa,SAAAb,uBAAG,gBA8CrC"}