define("qtype_uml/loader",["exports"],(function(_exports){function setDiagramToReferenceInputField(event){var _event$detail;const element=document.getElementById(null===(_event$detail=event.detail)||void 0===_event$detail?void 0:_event$detail.inputId);element&&(element.value=event.detail.diagram)}function setCorrectionToInputField(event){var _event$detail2;const elements=document.querySelectorAll("[id^='".concat(null===(_event$detail2=event.detail)||void 0===_event$detail2?void 0:_event$detail2.inputId,"__']"));elements&&elements.forEach((element=>{element.id.endsWith("__expected-comment")?element.innerHTML=event.detail.comment:element.id.endsWith("__expected-points")&&(element.innerHTML="".concat(event.detail.points," / ").concat(event.detail.maxPoints))}))}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0;_exports.init=basePath=>{const mainScript=document.createElement("script");mainScript.src="".concat(basePath,"/main.js"),mainScript.type="module",mainScript.defer=!0;const mainStyle=document.createElement("link");mainStyle.href="".concat(basePath,"/styles.css"),mainStyle.rel="stylesheet",document.head.appendChild(mainScript),document.head.appendChild(mainStyle);new MutationObserver((mutations=>{mutations.forEach((mutation=>{mutation.addedNodes.forEach((node=>{"UML-EDITOR"===node.nodeName?node.addEventListener("diagramChanged",setDiagramToReferenceInputField):"UML-EDITOR-CORRECTNESS"===node.nodeName&&node.addEventListener("correctionChanged",setCorrectionToInputField)}))}))})).observe(document.body,{childList:!0,subtree:!0})}}));

//# sourceMappingURL=loader.min.js.map