{"version":3,"file":"uml-editor-compression.min.js","sources":["../src/uml-editor-compression.js"],"sourcesContent":["// This file is part of Moodle - https://moodle.org\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <https://www.gnu.org/licenses/>.\n\n/**\n * Compress string to be used in Editor\n *\n * @param {String} input String to compress\n * @returns {String} Compressed string\n */\nfunction compressString(input) {\n    return encodeURIComponent(input)\n        .replace(/%20/g, ' ') // Replace %20 with space\n        .replace(/%21/g, '!') // Replace %21 with !\n        .replace(/%23/g, '#') // Replace %23 with #\n        .replace(/%24/g, '$') // Replace %24 with $\n        // Add more replacements as needed\n        .replace(/%25/g, '%'); // Replace %25 with %\n}\n\n/**\n * Decompress string encoded by Editor\n *\n * @param {String} input String to decompress\n * @returns {String} Decompressed string\n */\nfunction decompressString(input) {\n    return decodeURIComponent(input)\n        .replace(/ /g, '%20') // Replace space with %20\n        .replace(/!/g, '%21') // Replace ! with %21\n        .replace(/#/g, '%23') // Replace # with %23\n        .replace(/\\$/g, '%24') // Replace $ with %24\n        // Add more replacements as needed\n        .replace(/%/g, '%25'); // Replace % with %25\n}\n\n/**\n * Decode diagram string encoded by Editor\n *\n * @param {String} diagram Diagram string\n * @returns {Array} Array of objects\n */\nexport function decodeDiagram(diagram) {\n    const diagramContent = decodeURIComponent(diagram);\n    const diagramJson = decompressString(diagramContent);\n    return JSON.parse(diagramJson);\n}\n\n/**\n * Encode diagram to be used in Editor\n *\n * @param {Array} diagramObjects Array of objects\n * @returns {String} Encoded diagram\n */\nexport function encodeDiagram(diagramObjects) {\n    const diagramContent = JSON.stringify(diagramObjects);\n    const diagramEscaped = encodeURIComponent(diagramContent);\n    return compressString(diagramEscaped);\n}"],"names":["diagram","diagramJson","input","decodeURIComponent","replace","JSON","parse","diagramObjects","diagramContent","stringify","encodeURIComponent"],"mappings":"kKAqD8BA,eAEpBC,aAlBgBC,MAiBCC,mBAAmBH,SAhBnCG,mBAAmBD,OACrBE,QAAQ,KAAM,OACdA,QAAQ,KAAM,OACdA,QAAQ,KAAM,OACdA,QAAQ,MAAO,OAEfA,QAAQ,KAAM,YAPGF,aAmBfG,KAAKC,MAAML,8CASQM,sBACpBC,eAAiBH,KAAKI,UAAUF,uBA7ClBL,MA8CGQ,mBAAmBF,gBA7CnCE,mBAAmBR,OACrBE,QAAQ,OAAQ,KAChBA,QAAQ,OAAQ,KAChBA,QAAQ,OAAQ,KAChBA,QAAQ,OAAQ,KAEhBA,QAAQ,OAAQ,SAPDF"}