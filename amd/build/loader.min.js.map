{"version":3,"file":"loader.min.js","sources":["../src/loader.js"],"sourcesContent":["// This file is part of Moodle - https://moodle.org\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <https://www.gnu.org/licenses/>.\n\n/**\n * Set the diagram to the reference input field.\n *\n * @param {Event} event the custom event (fired by the editor)\n */\nfunction setDiagramToReferenceInputField(event) {\n    const element = document.getElementById(event.detail?.inputId);\n    if (element) {\n        element.value = event.detail.diagram;\n    }\n}\n\n/**\n * Set the correction to the reference input field and the moodle textarea.\n *\n * @param {Event} event the custom event (fired by the editor)\n */\nfunction setCorrectionToInputField(event) {\n    const elements = document.querySelectorAll(`[id^='${event.detail?.inputId}__']`);\n    if (elements) {\n        elements.forEach((element) => {\n            // if there is no AI summary we need to add the static evaluation to the expected comment and points\n            if (!event.detail.summary) {\n                if (element.id.endsWith('__expected-comment')) {\n                    element.innerHTML = event.detail.comment;\n                } else if (element.id.endsWith('__expected-points')) {\n                    element.innerHTML = `${event.detail.points} / ${event.detail.maxPoints}`;\n                }\n            } else {\n                // in the case of an AI summary we need to add the AI summary to the comment section\n                if (element.id.endsWith('__expected-comment')) {\n                    element.innerHTML = event.detail.summary;\n                }\n            }\n        });\n    }\n}\n\n/**\n * Initialize the uml editor elements.\n *\n * @param {String} basePath path to the dist folder of the uml-element\n */\n// Eslint-disable-next-line no-unused-vars\nexport const init = (basePath) => {\n    // Create script and style tag for custom elements\n    const mainScript = document.createElement('script');\n    mainScript.src = `${basePath}/main.js`;\n    mainScript.type = 'module';\n    mainScript.defer = true;\n\n    const mainStyle = document.createElement('link');\n    mainStyle.href = `${basePath}/styles.css`;\n    mainStyle.rel = 'stylesheet';\n\n    // Load script and style tag for custom elements\n    document.head.appendChild(mainScript);\n    document.head.appendChild(mainStyle);\n\n    // Listen for dom changes to detect when the editor is loaded\n    const observer = new MutationObserver((mutations) => {\n        mutations.forEach((mutation) => {\n            mutation.addedNodes.forEach((node) => {\n                if (node.nodeName === 'UML-EDITOR') {\n                    node.addEventListener('diagramChanged', setDiagramToReferenceInputField);\n                } else if (node.nodeName === \"UML-EDITOR-CORRECTNESS\") {\n                    node.addEventListener(\"correctionChanged\", setCorrectionToInputField);\n                }\n            });\n        });\n    });\n\n    observer.observe(document.body, {childList: true, subtree: true});\n};"],"names":["setDiagramToReferenceInputField","event","element","document","getElementById","detail","_event$detail","inputId","value","diagram","setCorrectionToInputField","elements","querySelectorAll","_event$detail2","forEach","summary","id","endsWith","innerHTML","comment","points","maxPoints","basePath","mainScript","createElement","src","type","defer","mainStyle","href","rel","head","appendChild","MutationObserver","mutations","mutation","addedNodes","node","nodeName","addEventListener","observe","body","childList","subtree"],"mappings":"mEAoBSA,gCAAgCC,+BAC/BC,QAAUC,SAASC,qCAAeH,MAAMI,uCAANC,cAAcC,SAClDL,UACAA,QAAQM,MAAQP,MAAMI,OAAOI,kBAS5BC,0BAA0BT,gCACzBU,SAAWR,SAASS,wDAA0BX,MAAMI,wCAANQ,eAAcN,iBAC9DI,UACAA,SAASG,SAASZ,UAETD,MAAMI,OAAOU,QAQVb,QAAQc,GAAGC,SAAS,wBACpBf,QAAQgB,UAAYjB,MAAMI,OAAOU,SARjCb,QAAQc,GAAGC,SAAS,sBACpBf,QAAQgB,UAAYjB,MAAMI,OAAOc,QAC1BjB,QAAQc,GAAGC,SAAS,uBAC3Bf,QAAQgB,oBAAejB,MAAMI,OAAOe,qBAAYnB,MAAMI,OAAOgB,0GAkB5DC,iBAEXC,WAAapB,SAASqB,cAAc,UAC1CD,WAAWE,cAASH,qBACpBC,WAAWG,KAAO,SAClBH,WAAWI,OAAQ,QAEbC,UAAYzB,SAASqB,cAAc,QACzCI,UAAUC,eAAUP,wBACpBM,UAAUE,IAAM,aAGhB3B,SAAS4B,KAAKC,YAAYT,YAC1BpB,SAAS4B,KAAKC,YAAYJ,WAGT,IAAIK,kBAAkBC,YACnCA,UAAUpB,SAASqB,WACfA,SAASC,WAAWtB,SAASuB,OACH,eAAlBA,KAAKC,SACLD,KAAKE,iBAAiB,iBAAkBvC,iCACf,2BAAlBqC,KAAKC,UACZD,KAAKE,iBAAiB,oBAAqB7B,oCAMlD8B,QAAQrC,SAASsC,KAAM,CAACC,WAAW,EAAMC,SAAS"}